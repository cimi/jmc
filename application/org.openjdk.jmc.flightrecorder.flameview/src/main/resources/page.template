<!DOCTYPE html "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<style type="text/css">%1$s</style>
	<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
	<!--[if lt IE 9]>
		<script>%2$s</script>
	<![endif]-->
	<style type="text/css" media="print">
		body {
			background: #fff;
		}

		#search {
			display: none;
		}
	</style>
</head>

<body>
	<select id="types"></select>
	
	<div id="chart"></div>
	<pre id="selected-type"></pre>
	<pre id="debug" style="width: 600px;"></pre>
	
	
	<script type="text/javascript">%3$s</script>
	<script type="text/javascript">		
		window.onload = () => {
			document.getElementById("types").addEventListener('change', (e) => {
				window.state.selected = document.getElementById("selected-type").value;
				document.getElementById("debug").innerHTML = window.state.selected;
			});
		};
		
		function updateBody(types, frames) {
			//const pre = document.createElement("pre");
			//pre.innerHTML = new Date() + " " + types;
			//document.body.appendChild(pre);
			
			
			const select = document.getElementById("types");
			select.innerHTML = '';
			const options = JSON.parse(types);
			for (let i = 0; i < options.length; i++) {
				const el = document.createElement("option");
				el.innerHTML = options[i];
				el.value = options[i];
				select.appendChild(el);
			};
			document.getElementById("debug").innerHTML = types + "\n" + frames;
			try {
				processGraph(JSON.parse(frames), true);
			} catch (e) {
				document.getElementById("debug").innerHTML += "\n" + e;
			}
		}
		
		function processGraph(data, viewInverted) {
			d3.select("#chart");
			flameGraph = flamegraph()
				.width(windowSize())
				.cellHeight(18)
				.transitionDuration(320)
				.minFrameSize(5)
				.transitionEase(d3.easeCubic)
				.sort(true)
				.title("")
				.differential(false)
				.inverted(viewInverted)
				// .tooltip(tip)
				.selfValue(true);
			d3.select("#chart")
				.datum(data)
				.call(flameGraph);
		};
		
		function windowSize() {
			return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
		};

		function resizeFlameGraph() {
			if (flameGraph) {
				flameGraph.width(windowSize());
				d3.select("#chart")
					.datum(currentJson)
					.call(flameGraph);
			}
		};
	</script>
</body>
</html>